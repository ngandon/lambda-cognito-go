{"version":3,"sources":["lib/contextLib.js","pages/SignInForm.js","pages/Welcome.js","App.js","config.js","index.js"],"names":["AppContext","createContext","useAppContext","useContext","SignInForm","isAuthenticated","userHasAuthenticated","useState","email","setEmail","password","setPassword","history","useHistory","useEffect","push","className","onSubmit","a","Auth","signIn","alert","message","htmlFor","type","id","placeholder","name","value","onChange","event","target","Welcome","status","setStatus","initialCheck","setInitialCheck","signOut","getStatus","API","get","headers","response","console","log","data","error","state","machine","onClick","e","App","isAuthenticating","setIsAuthenticating","currentSession","onLoad","PrivateRoute","children","rest","to","Provider","basename","path","config","apiGateway","REGION","URL","cognito","USER_POOL_ID","APP_CLIENT_ID","Amplify","configure","mandatorySignIn","region","userPoolId","userPoolWebClientId","endpoints","endpoint","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3eb8201c.chunk.js","sourcesContent":["import { useContext, createContext } from \"react\";\n\nexport const AppContext = createContext(null);\n\nexport function useAppContext() {\n  return useContext(AppContext);\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { useAppContext } from \"../lib/contextLib\";\nimport { useHistory } from \"react-router\";\n\nconst SignInForm = () => {\n\n    const { isAuthenticated, userHasAuthenticated } = useAppContext();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const history = useHistory();\n\n    const handleChangeUsename = event => {\n        setEmail(event.target.value);\n      };\n\n    const handleChangePassword = event => {\n        setPassword(event.target.value);  \n    };\n\n    const handleSubmit = () => {\n        (async () => {\n            try {\n                await Auth.signIn(email, password);\n                userHasAuthenticated(true);\n                alert(\"Logged in\");\n                \n            } catch (e) {\n                alert(e.message);\n            }\n        })();\n        history.push(\"/welcome\");\n    };\n\n    useEffect(() => {\n        // Redirect to the logged in pages if the user is logged in\n        if (isAuthenticated) {\n            history.push(\"/welcome\");\n        }\n    }, [isAuthenticated, history]);\n\n    return (\n    <div className=\"formCenter\">\n        <form className=\"formFields\" onSubmit={handleSubmit}>\n        <div className=\"formField\">\n            <label className=\"formFieldLabel\" htmlFor=\"email\">\n            E-Mail Address\n            </label>\n            <input\n            type=\"email\"\n            id=\"email\"\n            className=\"formFieldInput\"\n            placeholder=\"Enter your email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChangeUsename}\n            />\n        </div>\n\n        <div className=\"formField\">\n            <label className=\"formFieldLabel\" htmlFor=\"password\">\n            Password\n            </label>\n            <input\n            type=\"password\"\n            id=\"password\"\n            className=\"formFieldInput\"\n            placeholder=\"Enter your password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChangePassword}\n            />\n        </div>\n\n        <div className=\"formField\">\n            <button className=\"formFieldButton\">Sign In</button>{\" \"}\n        </div>\n\n        </form>\n    </div>\n    );\n}\n\nexport default SignInForm;","import React, { useState, useEffect } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { API } from \"aws-amplify\";\nimport { useAppContext } from \"../lib/contextLib\";\n\nconst Welcome = () => {\n\n    const [status, setStatus] = useState([]);\n    const [initialCheck, setInitialCheck] = useState(false);\n    const { userHasAuthenticated } = useAppContext();\n\n    async function handleLogout() {\n        await Auth.signOut();\n\n        userHasAuthenticated(false);\n    }      \n\n    // eslint-disable-next-line\n    const getStatus = () => {\n        if(!initialCheck){\n            setInitialCheck(true)\n        }\n        (async () => {\n            try {\n                const response = await API.get(\"lambda-API\", \"/State\", \n                                                        {\n                                                            headers: {\n                                                                \"Access-Control-Allow-Origin\": \"*\",\n                                                                \"Access-Control-Allow-Credentials\": true\n                                                            }\n                                                        });\n                console.log(response.data)\n                setStatus({\"name\": \"one\", \"state\":\"two\", \"machine\":\"tree\" })\n            } catch (e) {\n              console.error(e);\n            }\n        })();\n      };\n    \n      const startServer = () => {\n        (async () => {\n            try {\n              console.log(\"start\")\n            } catch (e) {\n              console.error(e);\n            }\n          })();\n        console.log(\"bonjour\");\n      };\n    \n      const stopServer = () => {\n    \n        (async () => {\n            try {\n              console.log(\"stop\")\n            } catch (e) {\n              console.error(e);\n            }\n          })();\n      };\n\n      useEffect(() => {\n        if(!initialCheck){\n            getStatus()\n        }\n      }, [initialCheck, getStatus]);\n\n    return (\n        <div className=\"appForm\">\n            <div><p>the status of the server <b>{status.name}</b> is {status.state} on a {status.machine} machine</p></div>\n            <div>\n                <button onClick={getStatus}>Check server status</button>\n                <button onClick={startServer}>Start the server</button>\n                <button onClick={stopServer}>Stop the server</button>\n            </div>\n            <div><button onClick={handleLogout}>Log Out</button></div>\n        </div>\n    );\n}\n\nexport default Welcome;","import React, { useState, useEffect } from \"react\";\nimport {\n    BrowserRouter as Router,\n    Redirect,\n    Route,\n    Switch,\n  } from \"react-router-dom\";\nimport SignInForm from \"./pages/SignInForm\";\nimport Welcome from \"./pages/Welcome\";\nimport { AppContext } from \"./lib/contextLib\";\nimport { Auth } from \"aws-amplify\";\nimport \"./App.css\";\n\nfunction App() {   \n\n    const [isAuthenticated, userHasAuthenticated] = useState(false);\n    const [isAuthenticating, setIsAuthenticating] = useState(true);\n\n    useEffect(() => {\n        onLoad();\n      }, []);\n    \n    // load the user session\n    async function onLoad() {\n        try {\n            await Auth.currentSession();\n            console.log(\"already logged in\")\n            userHasAuthenticated(true);            \n        }\n        catch(e) {\n            if (e !== 'No current user') {\n                alert(e);\n            }\n            console.log(\"not logged in\")\n        }  \n        setIsAuthenticating(false);\n        \n    }\n      \n\n    const PrivateRoute = ({ children, ...rest }) => {\n        return (\n          <Route {...rest}>\n            {isAuthenticated ? children : <Redirect to=\"sign-in\" />}\n          </Route>\n        );\n      };\n\n    return (\n        !isAuthenticating && (\n            <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\n                <Router basename=\"/react-auth-ui/\">\n                    <div className=\"App\">\n                        <div className=\"appAside\" />\n                        <div className=\"appForm\">\n                            <Switch>\n                                <Route path=\"/sign-in\">\n                                <div className=\"formTitle\"> \n                                    <div className=\"formTitle\"> Please sign in</div>            \n                                    <SignInForm />\n                                </div>\n                                </Route>\n                                <PrivateRoute path=\"/welcome\">\n                                <div className=\"formTitle\"> \n                                    <div className=\"formTitle\"> Welcome you</div>\n                                    <Welcome />\n                                </div>\n                                </PrivateRoute>\n                                <Redirect to=\"/sign-in\" />\n                            </Switch>\n                        </div>\n                    </div>\n                    \n                </Router>\n            </AppContext.Provider>\n        )\n    );\n}\n\nexport default App;","const config = {\n    // Backend config\n    apiGateway: {\n      REGION: 'eu-west-3',\n      URL: 'https://yptrru9tx8.execute-api.eu-west-3.amazonaws.com',\n    },\n    cognito: {\n      REGION: 'eu-west-3',\n      USER_POOL_ID: 'eu-west-3_VL7aT2B6L',\n      APP_CLIENT_ID: '678utp8o005ghaet957rfena50'\n    },\n  };\n  \n  export default config;\n  ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport config from './config';\nimport Amplify from \"aws-amplify\"\n\nAmplify.configure({\n    Auth: {\n        mandatorySignIn: true,\n        region: config.cognito.REGION,\n        userPoolId: config.cognito.USER_POOL_ID,\n        userPoolWebClientId: config.cognito.APP_CLIENT_ID\n      },\n      API: {\n        endpoints: [\n          {\n            name: \"lambda-API\",\n            endpoint: config.apiGateway.URL,\n            region: config.apiGateway.REGION\n          },\n        ]\n      }\n    });\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}